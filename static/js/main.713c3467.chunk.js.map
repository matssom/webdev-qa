{"version":3,"sources":["components/Question/styled.module.scss","components/Disclaimer/styled.module.scss","components/Container/index.js","components/Question/index.js","components/Loading/index.js","components/Markdown/index.js","config.js","api/fetch.js","components/Dropdown/index.js","components/QuestionGroup/index.js","components/Disclaimer/index.js","App.js","index.js","styled.module.scss","components/Loading/styled.module.scss","components/Dropdown/styled.module.scss","components/QuestionGroup/styled.module.scss","components/Container/styled.module.scss"],"names":["module","exports","Container","props","className","styled","container","children","Question","q","a","t","headline","question","topic","answer","Loading","text","QuestionGroup","allowDangerousHtml","process","questionAPI","baseURL","paths","qna","fetch","path","axios","get","config","catch","error","response","console","log","data","status","headers","Option","option","Dropdown","onChange","choices","map","e","i","key","renderList","list","Markdown","source","clean","question_type","Type","useState","setQna","types","setTypes","selected","setSelected","searchQuery","setSearchQuery","filteredQna","setFilteredQna","useEffect","questions","questionTypes","fetchData","timeout","setTimeout","qFilter","clearTimeout","filteredList","searchedList","searchResult","filter","filterByTopic","index","term","search","Wade","createIndex","sort","b","score","push","form","onSubmit","preventDefault","formGroup","label","htmlFor","target","value","id","type","placeholder","name","undefined","Disclaimer","localDisclaimer","localStorage","getItem","disclaimer","setDisclaimer","dismiss","bold","href","button","onClick","getDisclaimer","setItem","App","centered","tagline","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.713c3467.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styled_container__1OS7d\",\"headline\":\"styled_headline__2Q93Y\",\"question\":\"styled_question__3K-eP\",\"topic\":\"styled_topic__3FRjW\",\"answer\":\"styled_answer__3L1jd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styled_container__24DsA\",\"disclaimer\":\"styled_disclaimer__1NS2i\",\"bold\":\"styled_bold__11u7c\",\"button\":\"styled_button__21FkY\"};","import React from 'react';\r\n\r\nimport styled from './styled.module.scss';\r\n\r\nconst Container = (props) => {\r\n    \r\n\r\n    return(\r\n        <div className={styled.container}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nimport styled from './styled.module.scss';\r\n\r\nconst Question = ({ q, a, t}) => {\r\n    \r\n\r\n    return(\r\n        <li className={styled.container}>\r\n            <div className={styled.headline}>\r\n                <h3 className={styled.question}>Q: {q}</h3>\r\n                <span className={styled.topic}>{t}</span>\r\n            </div>\r\n            <div className={styled.answer}>{a}</div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nimport styled from './styled.module.scss';\r\n\r\nconst Loading = ({ text }) => {\r\n    \r\n\r\n    return(\r\n        <div className={styled.container}>\r\n            <h2 className={styled.text}>{ text ? text : 'Loading...' }</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\n\r\nimport ReactMarkdown from 'react-markdown/with-html';\r\n\r\n// import styled from './styled.module.scss';\r\n\r\nconst QuestionGroup = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ReactMarkdown {...props} allowDangerousHtml />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionGroup;","const config = {\r\n    dev:{\r\n        questionAPI: {\r\n            baseURL: 'http://localhost:1337',\r\n            paths: {\r\n                topic: '/question-types',\r\n                qna: '/qnas'\r\n            }\r\n        }\r\n    },\r\n    prod: {\r\n        questionAPI: {\r\n            baseURL: 'https://git.heroku.com/webdev-qa.git',\r\n            paths: {\r\n                qna: '/qnas',\r\n                topic: '/question-types'\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default process.env ? config.dev : config.prod;","import axios from 'axios';\r\nimport config from '../config';\r\n\r\nconst fetch = (path) => {\r\n    return axios.get(`${config.questionAPI.baseURL}${path}`)\r\n    .catch(function (error) {\r\n      if (error.response) {\r\n        console.log(error.response.data);\r\n        console.log(error.response.status);\r\n        console.log(error.response.headers);\r\n      }\r\n    });\r\n};\r\n\r\nexport default fetch;","import React from 'react';\r\n\r\nimport styled from './styled.module.scss';\r\n\r\nconst Option = (props) => {\r\n\r\n    return (\r\n        <option className={styled.option}>\r\n            {props.children}\r\n        </option>\r\n    );\r\n};\r\n\r\nconst Dropdown = (props) => {\r\n\r\n    return (\r\n        <select onChange={props.onChange} className={styled.container}>\r\n            {props.choices ? props.choices.map((e, i) => <Option key={i} >{e}</Option>) : ''}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport Wade from 'wade';\r\n\r\nimport Question from '../Question';\r\nimport Loading from '../Loading';\r\nimport Markdown from '../Markdown';\r\n\r\nimport styled from './styled.module.scss';\r\nimport fetch from '../../api/fetch';\r\nimport Dropdown from '../Dropdown';\r\n\r\nconst renderList = (list) => {\r\n\r\n    return (\r\n        <ul className={styled.list}>\r\n            {list.map((e, i) => {\r\n                return (\r\n                    <Question \r\n                        key={i} \r\n                        q={e.question} \r\n                        a={<Markdown source={e.answer}/>} \r\n                        t={e.topic}\r\n                    />\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst clean = (qna) => {\r\n    return qna.map(e => {\r\n        const topic = e.question_type && e.question_type.Type ? e.question_type.Type : 'General';\r\n        return {\r\n            question : e.question, \r\n            topic : topic,\r\n            answer : e.answer\r\n        };\r\n    });\r\n}\r\n\r\nconst createIndex = (qna) => {\r\n    return qna.map(e => e.question);\r\n};\r\n\r\nconst filterByTopic = (qna, topic) => {\r\n    return topic === 'All' ? qna : qna.filter(e => {\r\n        return e.topic === topic;\r\n    });\r\n};\r\n\r\nconst search = (index, term) => {\r\n    const search = Wade(index);\r\n    return search(term);\r\n}\r\n\r\nconst QuestionGroup = () => {\r\n    \r\n    const [qna, setQna] = useState();\r\n    const [types, setTypes] = useState();\r\n    const [selected, setSelected] = useState('All');\r\n    const [searchQuery, setSearchQuery] = useState('')\r\n    const [filteredQna, setFilteredQna] = useState(qna);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (!(qna || types)) {\r\n                const questions = await fetch('/qnas');\r\n                const questionTypes = await fetch('/question-types');\r\n                if (questions) {\r\n                    setQna(clean(questions.data));\r\n                }\r\n                if (questionTypes) setTypes(questionTypes.data);\r\n            }\r\n        };\r\n        fetchData();\r\n\r\n        if (selected || searchQuery) {\r\n            const timeout = setTimeout(() => {\r\n                qFilter();\r\n            }, 500);\r\n\r\n            return () => {\r\n                clearTimeout(timeout);\r\n            };\r\n        }\r\n\r\n    }, [qna, types, selected, searchQuery]);\r\n\r\n    const changeSelected = (e) => {\r\n        setSelected(e.target.value);\r\n    }\r\n\r\n    const changeSearchQuery = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    }\r\n\r\n    const qFilter = () => {\r\n        let filteredList = [];\r\n        let searchedList = [];\r\n        let filteredIndex = [];\r\n        let searchResult = [];\r\n        \r\n        filteredList = filterByTopic(qna, selected);\r\n        \r\n        if (searchQuery !== '') {\r\n            filteredIndex = createIndex(filteredList);\r\n            searchResult = search(filteredIndex, searchQuery);\r\n            searchResult.sort((a, b) => b.score - a.score);\r\n            for (const term of searchResult) {\r\n                searchedList.push(filteredList[term.index]);\r\n            }\r\n            setFilteredQna(searchedList);\r\n        } else {\r\n            setFilteredQna(filteredList);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styled.container}>\r\n            <form className={styled.form} onSubmit={(e) => e.preventDefault()}>\r\n                <div className={styled.formGroup}>\r\n                    <label className={styled.label} htmlFor=\"search\">Find Anything</label>\r\n                    <input onChange={changeSearchQuery} id=\"search\" className={styled.search} type=\"text\" placeholder=\"Search..\" name=\"search\"></input>\r\n                </div>\r\n                <div className={styled.formGroup}>\r\n                    <label className={styled.label} htmlFor=\"dropdown\">Topic</label>\r\n                    <Dropdown id=\"dropdown\" onChange={changeSelected} choices={types ? ['All', ...types.map(e => e.Type)] : ['All']}/>\r\n                </div>\r\n            </form>\r\n            {qna !== undefined ? qna ? filteredQna ? renderList(filteredQna) : renderList(qna) : <Loading text=\"Could not load questions\"/> : <Loading />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionGroup;","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport styled from './styled.module.scss';\r\n\r\nconst getDisclaimer = (dismiss) => {\r\n    return (\r\n        <div className={styled.container}>\r\n            <p className={styled.disclaimer}><span className={styled.bold}>Disclaimer: </span>This website is for reference only. If you have any specific concerns, email Anthony at: <a href=\"mailto:george.a.giannoumis@oslomet.no\">george.a.giannoumis@oslomet.no</a></p>\r\n            <button className={styled.button} onClick={dismiss}>X</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Disclaimer = (props) => {\r\n\r\n    const localDisclaimer = localStorage.getItem('disclaimer');\r\n\r\n    const [disclaimer, setDisclaimer] = useState(localDisclaimer === 'false' ? false : true);\r\n\r\n    const dismiss = () => {\r\n        localStorage.setItem('disclaimer', 'false');\r\n        setDisclaimer(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {disclaimer ? getDisclaimer(dismiss) : ''}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Disclaimer;\r\n\r\n","import React from 'react';\r\n\r\nimport Container from './components/Container';\r\nimport QuestionGroup from './components/QuestionGroup';\r\nimport Disclaimer from './components/Disclaimer';\r\n\r\nimport styled from './styled.module.scss';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <header>\r\n                    <div >\r\n                        <div className={styled.centered}>\r\n                            <h1 className={styled.headline}>Frequently asked questions</h1>\r\n                            <h2 className={styled.tagline}>Universal webdesing and development - OsloMet. Updated every week. </h2>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <QuestionGroup />\r\n                </main>\r\n            </Container>\r\n            <Disclaimer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'amidst';\r\nimport './assets/global.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <>\r\n        <App/>\r\n    </>,\r\n    document.querySelector(\"#root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"styled_centered__2kGDu\",\"headline\":\"styled_headline__2DoDO\",\"tagline\":\"styled_tagline__34X_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styled_container__1FTV1\",\"text\":\"styled_text__y2Oiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styled_container__3DfJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styled_container__2kOD8\",\"form\":\"styled_form__bE6xl\",\"search\":\"styled_search__3Gn8b\",\"label\":\"styled_label__JR9eh\",\"filterHeadline\":\"styled_filterHeadline__ASXfX\",\"list\":\"styled_list__3iOcG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styled_container__2eIiP\"};"],"sourceRoot":""}